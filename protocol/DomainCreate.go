// automatically generated by the FlatBuffers compiler, do not modify

package protocol

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type DomainCreate struct {
	_tab flatbuffers.Table
}

func GetRootAsDomainCreate(buf []byte, offset flatbuffers.UOffsetT) *DomainCreate {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &DomainCreate{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *DomainCreate) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *DomainCreate) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *DomainCreate) Domain() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *DomainCreate) RootAccount() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func DomainCreateStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func DomainCreateAddDomain(builder *flatbuffers.Builder, domain flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(domain), 0)
}
func DomainCreateAddRootAccount(builder *flatbuffers.Builder, rootAccount flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(rootAccount), 0)
}
func DomainCreateEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
